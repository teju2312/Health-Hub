// Generated by view binder compiler. Do not edit!
package com.example.healthhub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.healthhub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewProductsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView dollar;

  @NonNull
  public final ImageView newImg;

  @NonNull
  public final TextView newPrice;

  @NonNull
  public final TextView newProductName;

  @NonNull
  public final TextView textView2;

  private NewProductsBinding(@NonNull CardView rootView, @NonNull TextView dollar,
      @NonNull ImageView newImg, @NonNull TextView newPrice, @NonNull TextView newProductName,
      @NonNull TextView textView2) {
    this.rootView = rootView;
    this.dollar = dollar;
    this.newImg = newImg;
    this.newPrice = newPrice;
    this.newProductName = newProductName;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static NewProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.new_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dollar;
      TextView dollar = ViewBindings.findChildViewById(rootView, id);
      if (dollar == null) {
        break missingId;
      }

      id = R.id.new_img;
      ImageView newImg = ViewBindings.findChildViewById(rootView, id);
      if (newImg == null) {
        break missingId;
      }

      id = R.id.new_price;
      TextView newPrice = ViewBindings.findChildViewById(rootView, id);
      if (newPrice == null) {
        break missingId;
      }

      id = R.id.new_product_name;
      TextView newProductName = ViewBindings.findChildViewById(rootView, id);
      if (newProductName == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new NewProductsBinding((CardView) rootView, dollar, newImg, newPrice, newProductName,
          textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
